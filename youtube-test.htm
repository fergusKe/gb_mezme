<!DOCTYPE html>
<html>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: '6SP0NQ86Nfc',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }
      // var myplayer = document.getElementById("player");
      // console.log(myplayer.getCurrentTime());
      // var myplayer = document.getElementById("time");
      // setInterval(function(){
      //    myplayer.innerText = player.getCurrentTime();
      // },1000); //polling frequency in miliseconds
      

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      // var done = false;
      // function onPlayerStateChange(event) {
      //   if (event.data == YT.PlayerState.PLAYING && !done) {
      //     setTimeout(stopVideo, 6000);
      //     done = true;
      //   }
      // }
      // function stopVideo() {
      //   player.stopVideo();
      // }

        var getCurrentTimeFuncId;
      // The API calls this function when the player's state changes.
        function onPlayerStateChange(event) {
            var time, rate, remainingTime;
            
            console.log('timeCHANGE');
            if (event.data == YT.PlayerState.ENDED) {
              alert('over');
            }

            if (event.data == YT.PlayerState.PLAYING) {
                console.log('timePLAYING');

                getCurrentTimeFuncId = setInterval(function () {
                  time = player.getCurrentTime();
                  console.log('time='+time);
                }, 100);
                
            }
            else{
              if (getCurrentTimeFuncId) clearInterval(getCurrentTimeFuncId);
            }
        }

        function pauseVideo() {
            player.pauseVideo();
        }
    </script>
  </body>
</html>